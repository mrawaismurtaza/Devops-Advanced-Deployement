name: CI Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  # Build and Push Containers in a Single Job
  build-and-push-containers:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      # Install Docker Compose
      - name: Install Docker Compose
        run: |
          curl -L "https://github.com/docker/compose/releases/download/1.29.2/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
          sudo chmod +x /usr/local/bin/docker-compose
          docker-compose --version

      # Set up Docker Buildx
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      # Cache Docker layers
      - name: Cache Docker layers
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      # Build Docker Containers with Docker Compose
      - name: Build Docker Containers with Docker Compose
        run: |
          docker-compose -f docker-compose.yml build
          docker images  # Log all Docker images after the build

      # Log in to DockerHub
      - name: Log in to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Tag and Push Frontend Image
      - name: Tag and Push Frontend Image
        run: |
          docker tag frontend frontend
          docker images  # Log images after tagging
          docker push ${{ secrets.DOCKER_USERNAME }}/frontend

      # Tag and Push Backend Image
      - name: Tag and Push Backend Image
        run: |
          docker tag backend backend
          docker images  # Log images after tagging
          docker push ${{ secrets.DOCKER_USERNAME }}/backend

  # Run Unit Tests (Frontend and Backend)
  run-tests:
    runs-on: ubuntu-latest
    needs: [build-and-push-containers]
    steps:
      - uses: actions/checkout@v2
      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '14'
      - name: Install Dependencies and Run Tests for Frontend
        run: |
          cd frontend
          npm install
          npm test -- --coverage
      - name: Install Dependencies and Run Tests for Backend
        run: |
          cd backend
          npm install
          npm test -- --coverage

  # Linting and SAST for Frontend and Backend
  linting:
    runs-on: ubuntu-latest
    needs: [run-tests]
    steps:
      - uses: actions/checkout@v2
      - name: Set up Node.js for Linting
        uses: actions/setup-node@v2
        with:
          node-version: '14'
      - name: Run Linter for Frontend
        run: |
          cd frontend
          npm install
          npm run lint
      - name: Run Linter for Backend
        run: |
          cd backend
          npm install
          npm run lint
