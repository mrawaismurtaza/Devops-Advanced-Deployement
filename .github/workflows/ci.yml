name: CI Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  # Build Frontend Docker Container
  build-frontend:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Cache Docker layers
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-
      - name: Build Frontend Docker Container
        run: |
          docker build -f frontend/Dockerfile -t my-frontend:latest frontend

  # Build Backend Docker Container
  build-backend:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Cache Docker layers
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-
      - name: Build Backend Docker Container
        run: |
          docker build -f backend/Dockerfile -t my-backend:latest backend

  # Run Unit Tests (Frontend and Backend)
  run-tests:
    runs-on: ubuntu-latest
    needs: [build-frontend, build-backend]
    steps:
      - uses: actions/checkout@v2
      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '14'
      - name: Install Dependencies and Run Tests for Frontend
        run: |
          cd frontend
          npm install
          npm test -- --coverage
      - name: Install Dependencies and Run Tests for Backend
        run: |
          cd backend
          npm install
          npm test -- --coverage

  # Linting and SAST for Frontend and Backend
  linting:
    runs-on: ubuntu-latest
    needs: [run-tests]
    steps:
      - uses: actions/checkout@v2
      - name: Set up Node.js for Linting
        uses: actions/setup-node@v2
        with:
          node-version: '14'
      - name: Run Linter for Frontend
        run: |
          cd frontend
          npm install
          npm run lint
      - name: Run Linter for Backend
        run: |
          cd backend
          npm install
          npm run lint

  # Push Docker Containers to DockerHub
  push-to-dockerhub:
    runs-on: ubuntu-latest
    needs: [build-frontend, build-backend]
    steps:
      - name: Log in to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Push Frontend Image
        run: |
          docker tag my-frontend:latest mydockerhubusername/my-frontend:latest
          docker push mydockerhubusername/my-frontend:latest
      - name: Push Backend Image
        run: |
          docker tag my-backend:latest mydockerhubusername/my-backend:latest
          docker push mydockerhubusername/my-backend:latest
